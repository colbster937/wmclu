https://drv835qwlxwqx.cloudfront.net|1723335087148:<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <style>
            body {
                font-family: "Courier New", Courier, monospace;
                color: #00ff00;
            }

            .glitch {
                font-size: 72px;
                position: relative;
                animation: glitch-animation 1s infinite;
            }

            .glitch:before,
            .glitch:after {
                content: attr(data-text);
                position: absolute;
                left: 0;
                width: 100%;
                height: 100%;
                animation: glitch-animation 1s infinite;
            }

            .glitch:before {
                left: 2px;
                text-shadow: -2px 0 red;
                clip: rect(24px, 550px, 90px, 0);
                animation-delay: -0.5s;
            }

            .glitch:after {
                left: -2px;
                text-shadow: -2px 0 blue;
                clip: rect(85px, 550px, 140px, 0);
            }

            @keyframes glitch-animation {
                0% {
                    clip: rect(42px, 9999px, 44px, 0);
                    transform: skew(0.2deg);
                }
                5% {
                    clip: rect(84px, 9999px, 85px, 0);
                    transform: skew(0.1deg);
                }
                10% {
                    clip: rect(32px, 9999px, 33px, 0);
                    transform: skew(0.3deg);
                }
                15% {
                    clip: rect(68px, 9999px, 70px, 0);
                    transform: skew(0.4deg);
                }
                20% {
                    clip: rect(12px, 9999px, 13px, 0);
                    transform: skew(0.1deg);
                }
                25% {
                    clip: rect(72px, 9999px, 73px, 0);
                    transform: skew(0.2deg);
                }
                30% {
                    clip: rect(42px, 9999px, 44px, 0);
                    transform: skew(0.1deg);
                }
                35% {
                    clip: rect(68px, 9999px, 70px, 0);
                    transform: skew(0.3deg);
                }
                40% {
                    clip: rect(32px, 9999px, 33px, 0);
                    transform: skew(0.2deg);
                }
                45% {
                    clip: rect(84px, 9999px, 85px, 0);
                    transform: skew(0.3deg);
                }
                50% {
                    clip: rect(12px, 9999px, 13px, 0);
                    transform: skew(0.4deg);
                }
                55% {
                    clip: rect(72px, 9999px, 73px, 0);
                    transform: skew(0.2deg);
                }
                60% {
                    clip: rect(42px, 9999px, 44px, 0);
                    transform: skew(0.1deg);
                }
                65% {
                    clip: rect(68px, 9999px, 70px, 0);
                    transform: skew(0.3deg);
                }
                70% {
                    clip: rect(32px, 9999px, 33px, 0);
                    transform: skew(0.2deg);
                }
                75% {
                    clip: rect(84px, 9999px, 85px, 0);
                    transform: skew(0.1deg);
                }
                80% {
                    clip: rect(12px, 9999px, 13px, 0);
                    transform: skew(0.4deg);
                }
                85% {
                    clip: rect(72px, 9999px, 73px, 0);
                    transform: skew(0.3deg);
                }
                90% {
                    clip: rect(42px, 9999px, 44px, 0);
                    transform: skew(0.2deg);
                }
                95% {
                    clip: rect(68px, 9999px, 70px, 0);
                    transform: skew(0.1deg);
                }
                100% {
                    clip: rect(32px, 9999px, 33px, 0);
                    transform: skew(0.4deg);
                }
            }

            .btn {
                margin-top: 20px;
                padding: 10px 20px;
                font-size: 24px;
                color: #00ff00;
                background: transparent;
                border: 2px solid #00ff00;
                cursor: pointer;
                animation: glitch-animation 1s infinite;
                transition: 0.2s ease-in-out;
            }

            .btn:hover {
                background-color: rgba(0, 255, 0, 0.2);
            }

            .content {
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left: 0;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                background: black;
                background-size: cover;
                visibility: hidden;
            }
        </style>
    </head>
    <body>
        <div class="content">
            <h1 class="glitch" data-text="WebMC Loader">WebMC Loader</h1>
            <button class="btn" onclick="openNewTab()">OPEN</button>
        </div>
        <script>
            let currentLink = "https://drv835qwlxwqx.cloudfront.net";
            let abc123 = "VzNiTUNMMDRkM3I";

            window.loaderHTML = `<!DOCTYPE html><html><head><style>@keyframes fade-in{0%{opacity:0;}100%{opacity:1;}}.loader{position:fixed;top:0;left:0;width:100%;height:100%;display:flex;align-items:center;justify-content:center;background: #000;z-index:1000;transition:opacity 0.75s,visibility 0.75s;}.loader::after{content:"";width:50px;height:50px;border:5px solid transparent;border-top-color:#00FF00;border-radius:50%;animation:loading 0.75s linear infinite;}.loader--hidden{opacity:0;visibility:hidden;}@keyframes loading{0%{transform:rotate(0turn);}100%{transform:rotate(1turn);}}</style></head><body><div class="loader"></div></body></html>`;

            function updateCheck() {
                fetch(
                    "https://raw.githubusercontent.com/colbychittenden/wmclu/main/update",
                )
                    .then((response) => response.text())
                    .then((fetchedText) => {
                        let s = atob(fetchedText).trim();
                        let i = s.indexOf("|");
                        let update = [s.slice(0, i), s.slice(i + 1)];
                        s = update[1];
                        i = s.indexOf(":");
                        [date, update[1]] = [s.slice(0, i), s.slice(i + 1)];
                        date = new Date(parseFloat(date));
                        const formattedDate = `${date.getFullYear()}_${String(date.getMonth() + 1).padStart(2, "0")}_${String(date.getDate()).padStart(2, "0")}`;
                        if (update[0] !== currentLink.trim()) {
                            console.warn(`An update is available!`);
                            if (
                                confirm(
                                    `An update is available!\nDownload now?`,
                                )
                            ) {
                                [file, ext] = window.location.pathname
                                    .split("/")
                                    .pop()
                                    .split(".");
                                downloadFile(
                                    `${file}_${formattedDate}.${ext}`,
                                    update[1],
                                );
                            }
                        } else {
                            console.log("You're on the latest version!");
                        }
                    })
                    .catch((error) => {
                        console.error("Error fetching the URL:", error);
                    });
            }

            window.addEventListener("load", function () {
                //W3bMCL04d3r
                var q = window.location.search;
                q = new URLSearchParams(q);
                var pass = q.get("pass");
                if (pass) {
                    login(false, false, pass);
                    window.location.href.replace(location.search, "");
                } else if (!sessionStorage.getItem("loggedIn")) {
                    login(false, true, false);
                }
                document.querySelector(".content").style.visibility = "visible";
                document.title = "New Tab";
                if (window.location.protocol == "file:") {
                    if (pass) {
                        window.location.href = window.location.href.replace(
                            location.search,
                            "",
                        );
                    } else {
                        updateCheck();
                    }
                } else {
                    if (pass) history.replaceState("/", "/", "/");
                }
            });

            function login(state, show, pass) {
                loggedIn = state;
                while (!loggedIn) {
                    if (!pass) {
                        enteredpass = prompt("Please log in!");
                    } else {
                        enteredpass = atob(pass);
                    }
                    if (enteredpass == atob(abc123)) {
                        loggedIn = !loggedIn;
                        sessionStorage.setItem("loggedIn", loggedIn);
                        if (show) alert("Correct Password!");
                    } else if (enteredpass == "") {
                        if (show) alert("Please enter a password!");
                    } else {
                        alert("Inorrect Password!");
                    }
                }
            }

            function downloadFile(fileName, content) {
                const blob = new Blob([content], { type: "text/html" });
                const link = document.createElement("a");
                const objectUrl = URL.createObjectURL(blob);

                link.href = objectUrl;
                link.download = fileName;

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                URL.revokeObjectURL(objectUrl);
            }

            function openNewTab() {
                const newAboutBlankWindow = window.open(
                    "about:blank",
                    "_blank",
                );

                const loadiframe = document.createElement("iframe");
                loadiframe.srcdoc = window.loaderHTML;
                loadiframe.style.border = "none";
                loadiframe.style.position = "absolute";
                loadiframe.style.left = 0;
                loadiframe.style.top = 0;
                loadiframe.style.width = "100%";
                loadiframe.style.height = "100%";
                loadiframe.allow = "fullscreen";
                loadiframe.referrerpolicy = "no-referrer";
                loadiframe.style.margin = "0";
                loadiframe.style.padding = "0";
                loadiframe.style.zIndex = "5";

                const iframe = document.createElement("iframe");
                iframe.src = currentLink;
                iframe.style.border = "none";
                iframe.style.position = "absolute";
                iframe.style.left = 0;
                iframe.style.top = 0;
                iframe.style.width = "100%";
                iframe.style.height = "100%";
                iframe.allow = "fullscreen";
                iframe.referrerpolicy = "no-referrer";
                iframe.style.margin = "0";
                iframe.style.padding = "0";
                iframe.style.zIndex = "10";

                newAboutBlankWindow.document.body.style.margin = "0";
                newAboutBlankWindow.document.body.style.overflow = "hidden";
                newAboutBlankWindow.document.body.appendChild(loadiframe);
                newAboutBlankWindow.document.body.appendChild(iframe);

                window.open("", "_self").close();
                window.location.href = "about:blank";
            }
        </script>
    </body>
</html>

